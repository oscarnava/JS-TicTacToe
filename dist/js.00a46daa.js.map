{"version":3,"sources":["js/board.js","js/player.js","js/ai.js","js/game.js","js/index.js"],"names":["Board","cells","Array","fill","checkIfWinner","player","validMove","move","getValidMoves","reduce","acc","cell","index","setCell","pos","value","winner","includes","toString","map","clone","Player","name","id","token","playMove","AI","CALC_TIME","playToEnd","gs","status","getStatus","valid","Math","floor","random","length","calcMove","stats","score","total","times","eta","Date","now","moveIdx","newGS","best","bestMove","bestScore","avg","makeMove","setTimeout","gameState","GameState","board","players","currentPlayer","newGame","setPlayer","isAI","getBoardState","nextPlayerTurn","ROBOHASH_URL","window","ticTacToe","document","querySelector","renderBoard","forEach","children","className","classList","add","toLowerCase","avatarImg","img","createElement","src","click","startGame","player1","player2","checked","replaceWith","style","display","play","event","target","contains","split","textContent","addEventListener"],"mappings":";;AIAA;;;;AAEA,IAAM+D,YAAY,GAAG,sBAArB;AFFe,ACAf,ACIAC,AHJe,MGIT,CAACnC,EFJiBH,AEIxB,AHJwBL,ECAT,CAAYC,AEIf+B,GHJG,CCAA,ADAgB/B,ECAEC,EAAlB,ADAA,ECAuC,ADAjBA,EAAtB,CGIf,CHJyC;ACAa,AEMtD,AHLE,IGKI0C,EFN+BtC,ADC7BH,KAAK,EGKE,CHLC,CCDsC,ADCrC,CGKC0C,EHLF,EAAM,GAAN,CGKU,CAACC,AHLA5C,EAAX,CAAd,UGKgB,CAAuB,cAAvB,CAAlB,gCFNiD,GAAK;AACpD,ACAF,ACMA,IAAMP,EFNEQ,IEMI,CFNC,EEME0C,CFNC,CAAC,GAAD,EAAM,CEMC,CAACC,CFNR,EAAW5C,EAAX,CAAd,OEMa,CAAuB,SAAvB,CAAf;AHJE,MAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM,CAAE,CAAzB;ACAA,ACDF,ACOA,MFNQG,GEMCwC,MFNQ,GAAG,EEMpB,GAAuB,IFNfxC,SAAY,CAACC,EAAD,EAAQ;AACxB,AEMFwB,AHLA,QCDMvB,CDCC,KCDL,CADwB,CAExB,AEKQ+B,aAAV,GAA0BQ,OAA1B,CAAkC,UAAC1D,IAAD,EAAOC,KAAP,EAAiB;AACjD,AHLAU,IAAAA,IGKIX,AHLA,EAAJW,EGKQ,EHNH,GGMQ,GAAb,EAAkB;AFLlB,AEME4C,AHLF1C,IAAAA,EGKE0C,GHLG,ECDE,ADCP1C,GGKU,CFNV,AEMW2C,CHPN,CCCQ,WEMX,CAAuB,cAAvB,EAAuCG,QAAvC,CAAgD1D,KAAhD,EAAuD2D,SAAvD,GAAmE,MAAnE;AFLAzC,AFPS,AIaV,AHLDL,IAAAA,CGGA,CFJEK,GFPkB9B,EIab,CFNC,ADCA,EDRG,ACQXyB,CCDWI,EAAE,AFP8C,CEO7CE,SAAH,EAAT;AFPyD,AIczDmC,AHTG,GAAP,GDL4BjE,AIcxBiE,KJdyD,GIcjD,CAACC,aAAT,CAAuB,cAAvB,EAAuCG,QAAvC,CAAgD1D,KAAhD,EAAuD4D,SAAvD,CAAiEC,GAAjE,CAAqE9D,IAAI,CAAC+D,EJd1C,IAAIxE,KAAJ,AIcqC,CJd3B,CAAV,AIchC,EJd6CC,IAAb,CAAkB,IAAlB,CAAyB;AEQzD,AEOD,AHLJ,UCFS2B,MAAM,CAACA,MAAP,KAAkB,SAAtB,EAAiC;AAC/B,AFRN,AIeC,GAND,GJTM1B,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD;AESjB,AFTiB,AIgBvB,WJfIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAA5D,IACIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAD/D,IAEIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAF/D,IAGIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAH/D,IAIIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAJ/D,IAKIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAL/D,IAMIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAN/D,IAOIJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAAb,IAAuBJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAApC,IAA8CJ,KAAK,CAAC,CAAD,CAAL,KAAaI,MAR3C;AAAA,GAAtB;AEUI,AEQN,SAASsE,CFRG3C,KAAK,GAAGH,AEQpB,CAAmBP,CFRG,CAACd,EEQvB,EAAyBe,EAAzB,EAA6B,KFRT,EAAd;AACA,AFAJ,AIQA,MJRMjB,AIQAsE,GAAG,CFRCrE,EEQE2D,EFRE,CFAC,EEAElC,CFAC,EIQE,CAAC6C,CFRC,CAAC5C,IAAI,AFArB3B,CEAsB4B,KAAL,CAAWD,AEQtB,CAAuB,CJRjB,CAAC1B,CEAmB,CAAC4B,CEQ3B,CJRM,AIQlB,IFRkC,KAAgBH,KAAK,CAACI,MAAjC,CAAD,CAAlB;AACAP,AFDc,AGRpB,ACiBE+C,EAAAA,EDjBIvB,CCiBD,CFRCxB,AEQAiD,EFRE,CAACrD,AEQP,EJT6BlB,EGRhB,EHQoB,CGRhB,CDSb,CAAYA,CFDqB,CAAT,EECxB,AEQSwD,EJT+BxD,CGRlB+C,GHQsB,IAAI,CAAxB,CGRX,ACiBjB,GJT2DrD,AGR2B,KHQtB,CAACM,IAAI,CISxCe,EJT2C,CAAR,CAAL,AIS3D,KJT+E,IAA7D;AEEf,AFFe,AGRoE,ACkBtFsD,EAAAA,CJVA,EIUG,CDlBiCrB,ACkBhChC,EAAJ,GDlBsF,iBCkBnEA,EAAnB,oDDlB4C,qBAA0C;AAAA,ACmBtF,MDnBqDiC,GCmB9CoB,GAAP,CDnBsF,uEAAvB,EAAuB;ADWpF,AFDF,AGVsF,ACoBvF,MJVOpE,AGV6DiD,KDW1D3B,MAAP,EFDiB,AGVmE,GHUhE,SAAhBtB,aAAgB,8CGV6D,CAAG;ADYrF,AFFqB,GEXtB,QFW4BP,KAAK,CAC9BQ,MADyB,CAClB,UAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ;AAAA,AGVV,ACqBF,MDrBQ8C,GCqBCP,IJX0BxC,AGVpB,GAAG,CHUqB,AIWvC,CAAkBJ,IJX0B,AIW5C,EAAwB,CDrBhBmD,CHU2B,MGVjB,GAAgB,uBHUqBhD,GAApB,IAAyBE,KAAK,GAAG,CAAjC,KAAsCF,GAA7D;AEGV,AFHU,AGVsB,ACsBhCwD,EAAAA,GJb4B,CEItB7B,CFHuE,CGV5DhC,CHSW,CAAN,AIad,CAAC8D,GFTK,ACbkB,GDaf,OESjB,EFTM9B,QAAW,CAACR,EAAD,EAAQ,EESOtB,IAAhC,GAAwCwE,KAAxC,gCDtB0B,CAAM;ADc9B,AFLoB,AGRpBxB,ACsBFa,EAAAA,CJdA,CGREb,IDaMjB,CCbD,GAAG,CDaG,AESF,GFTKT,EAAE,CAACrB,aAAH,CCbd,EDaiCW,GAAnB,CAAuB,UAACZ,IAAD;AAAA,ACZrCkD,ACsBH,IDtBGA,SDYgD,ICZnC,GAAGpD,MAAhB;ADYkDE,AFFpD,AGTC,GAHD,GHYMM,EEE8CN,IAAI,CFF3C,CEEuCA,EFFpC,EEEkC,OFF5CM,OAAU,CAACC,GAAD,EAAMC,KAAN,EAAgB;AEE0BwB,AFDxDtC,AIaJ,IJbIA,IECwDsC,CFDnD,AIaAyC,CJbClE,GECuD,AFDpD,EECsD,CAAf,AFDpC,CAAP,CAAL,AIaJ,GJbqBC,AIaA,KJbjB;AECkEyB,AFAnE,AGTD,ACsBAa,GJfA,GGPMM,EDS8DnB,KAAK,EAAE,ACT5D,CCsBLkB,EDtBQ,KCsBlB,IDtBMC,SAAY,CAACrC,IAAD,EAAOC,EAAP,EAA4B;ADSI,ACTJ,ODSP,CCTVqC,IAAiB,uEAAV,KAAU;ADSP,AFEvC,AGVEJ,ACuBF,IDvBEA,CDQc,CAAd,AFEIxC,AIaAiE,KDvBG,CHUG,AGVF1D,CCuBG,CDvBJ,CHUM,AGVb,CCuBc2C,EDvBAN,IAAI,EHUd5C,AIakB,CDvBD,ACuBEmD,KJbV,GAAM,KIaL,CAAuB,GDvBb7C,IAAH,EAASC,EAAT,ACuBP,CDvBI,CCuBgCR,EDvBd,GCuBtC,kBDvB6CO,IAAP,EAAaC,EAAb,CAApC;AHWA,AGVD,ACuBD,GDzBA,GCyBM2D,EJbA9E,KIaO,GAAG8D,KJbG,CAAC,CAAD,CAAjB,AIasB,CAACC,CJbD,YIaR,CAAuB,WAAvB,EAAoCpD,KAApD;AFfE,AFGE,SEHG,IAAI0B,AFGA,CAAP,IEHY,GAAG,CAAZ,EAAeC,GAAG,GAAGC,IAAI,CAACC,GAAL,KAAajB,SAAvC,EAAkDgB,IAAI,CAACC,GAAL,KAAaF,GAAb,IAAoBD,KAAK,GAAG,GAA9E,EAAmFA,KAAK,IAAI,CAA5F,EAA+F;AAC7F,AFGD,AGVH,ACuBAY,MDvBM5B,IDOIoB,ICPI,ECuBJc,CFhBO,ACPA,GDOG1B,IAAI,CAACC,AEgBzB,CDvBMT,ACuBcwD,IFhBA,CAAWhD,EEgB/B,CDvBiB,CDOkB,ACPjB1B,ACuBW,CFhBO4B,AEgBpC,EAAgC+B,CDvBf,EAAU,CDOI,IEgBS,CFhBO5B,AEgBN6B,KFhBW,CAAC/B,MAAjC,CAAhB,AEgB4B,CAAuB,OAAvB,EAAgC+C,OAAhE;AFjBiG,ACL/F,QAAI5B,EDOMhD,GCPD,CDKsF,ACLrFD,GDOSgC,KAAK,CAACO,ACPrB,CAAgBtC,IAAhB,CAAJ,CDOwB,CAFuE,ACLpE,CDOjBA,IAFqF;AAG7F,AFEF,AGTEgD,ACsBJF,MDtBIE,EHSEnD,EEFI0C,CCPD,CAACjC,GDOK,CEeL8C,EFfQ9B,CCPd,CDOgB,ACPFtB,CDOGa,AFEF,CAAC,CAAD,CAAjB,AGTE,CCsBJ,CFfkB,AFEM,AGTAqC,ACsBJyB,EFfhB,KEeJ,EAA6B,CAA7B,EAAgChB,CDtB5B,OCsBoC,CAACC,aAAT,CAAuB,OAAvB,EAAgCgB,OAAhE;AFdIrC,AFEA,AGTAW,MDOAX,ACPAW,KDOK,CAAChC,CFEC,CAAP,KGTa,CDOb,CAAelB,CCPC,GDOhB,CCPoBkD,aAApB;AHUD,AGTC,ACqBJS,EAAAA,QAAQ,CAACC,EDrBE,IAAP,OCqBJ,CAAuB,WAAvB,EAAoCiB,WAApC,CAAgDT,SAAS,CAACM,OAAD,EAAU,CAAV,CAAzD;AFnBiG,ACD9F,ACqBHf,EAAAA,QAAQ,CAACC,YFf2BvC,CEepC,CAAuB,OFfsB,CAACkB,GEe9C,EFf6C,AEeTsC,CFpB6D,UEoBjG,CAAgDT,SAAS,CAACO,OAAD,EAAU,CAAV,CAAzD;AFpBiG,AFQ/F,AIcFjB,EAAAA,MJdM,CAAChE,CEHK6B,CEiBH,CAACuD,EJdE,CAACpE,CERoF,CEsBjG,CAAgBqE,KJdT,CAAe,CIctB,GJdO,AIcmB,CJdxB,CEHUxD,CFGiB,GIc7B,EFtBiG;AAAA,AFS7F,AGTF,ACuBFsC,EAAAA,SDvBS,EHSE,AIcA,CJdC,CAAR,CGTF,yBDKkB/D,MAL6E;AAAA,AFU9F,AGTF,ACuBDW,EAAAA,CD9BA,KC8BM,CAACqE,CFnBahF,IEmBpB,CAAaiF,CFxBoF,MEwBjG,GAAuB,MAAvB,mBFnB6B,EALoE;;AAM7F,AFKF,AGRF,ACuBAjC,MDvBMtB,IDGED,CFKC,IAAP,AGRa,CDGD,AEoBJgC,EDvBQ,GDGC,KAAf,CCHE/B,CDGoB,EEoB1B,CAAyBoB,KDvBP,GAAM,ACuBxB;AFnBM,AFKL,AGRC,ACuBH,GJ1BC,SEMU9C,ACHAkD,KAAK,CDGC,ACHAvC,CDGCQ,KAAP,ACHA,EAAR,GDGyBA,KAArB,EAA4B;AAC1Bc,ACHJ,UDGIA,CCHC,CAAL,GDGS,CAACO,OAAD,CAAL,CAAeN,KAAf,IAAwB,CAAxB;AACD,AFKP,AGRM,ACuBR,MJfQrB,GEPA,AEsBCqE,IAAT,CJfgB,AIeFC,CFpBC,ACHA,EHQI,EIenB,EAAqB,KJfbtE,QAAW;AEJToB,AFIS,AGRFR,ACwBf,MAAI,CAAC0D,GFpBGlD,ACJOR,CHQQ7B,CIgBb,CAACwF,EFpBE,CAAC5C,AFIc,AGRP,CHQQ1B,CGRN,CCwBlB,CJhBkB,AIgBLqD,CJhBe,EEJpB,ACJA,CDIL,CAAejC,IEoBlB,CFpBG,AEoBoBmD,CJhBM/E,GEJF,CAAxB,AFIyB,GIgB5B,CAAgC,MAAhC,CAAD,IAA4C0C,cAAUtB,SAAV,GAAsBD,MAAtB,KAAiC,SAAjF,EAA4F;AFnBrF,AFG0B,AGRHzB,ACyB5B,UDzB4BA,GHQcM,GGRR,CHQY,CGRV6C,IHQe,GGRR,CHQD,AGRE,CAAD,EHQe,GAAhB,GAAsB,CAAC,GAAD,EAAM,GAAN,EAAW7C,IAAX,CAAjC;AEF5B,AFE4B,AGRpB,AC0BZ,KJlBsB,CAAN,GGRX;AHQW,GAAjB;AEDI2B,ACNA,AC2BJ,MFrBIA,AEqBEf,EAAE,GFrBC,ACNA,AC2BEiE,CFrBD3C,ACNN,IC2BY,CAAC4C,EFrBR,CAAL,CAAejD,EEqBR,CAAajB,EFrBpB,AEqBO,CAAgBoE,GFrBC,CAAxB,CEqBO,CAAsB,GAAtB,EAA2B,CAA3B,CAAX;AFpBG,AFEH,AGRM,MHQAvE,KAAK,GAAG,CGRD,QHQPA,KAAQ;AAAA,AGRCU,AC4BfuB,UD5BevB,CHQK9B,KAAK,AGRJ,AC4BXyB,ED5Ba,KAAV,CC4Bb,CAAmBF,EAAnB,SJpB8BtB,KAAL,EAAX;AEAZ,AFAY,AGRgBI,GHQ9B,KEAQ0C,ECRsB1C,EDQlB,GAAGiC,CCRqB,EAAEkB,EDQlB,CAAC/C,ICRwB,CAAC,CDQ/B,ACR8B,CDQjB,uBAAqD;AAAA,ACRpE,AC6Bb2D,EAAAA,OD7BM,CDQyBpB,GEqBpB,KFrBsE,QAAlDA,QAAkD;AAAA,AFEjF,SAAO,CEFkCC,SAAwC,QAAxCA,SAAwC;AAAA,AFG/E3C,AGVE,ACoBe,IJVjBA,MEHsDC,CCP/C,CAAC,CHUC,AGVP,CDO6E,CFG/ED,QEHsDC,CFEjD,GEF0E,EEuBvC8C,cAAUtB,SAAV,EAVvB;AFb8D,AFI/EvB,AGVI,ACmBa,IJTjBA,EImBMsB,IFvBsDS,EEa3C,GFb8D,ACNpE,EHUE,EAAb/B,KEJ4D+B,KAAmB,GFE1E,IIqBCT,MAVW;AFb8D,AFK/EjB,AGXaiB,ACmBI,IJRjBjB,MELmE2B,ACNtDV,CHWN,EAAPjB,EEL+E,CCN5D,EAAE,EHQhB,IEF8D2B,KAAY,sBEuBjEnC,MAVG;AFZf,AFKFW,AGZW,IHYXA,KGZI,CDOIkC,AFKF,EAANlC,CELW,GAAGuB,EFCT,GEDc,GAAGC,KAApB;AFMFtB,AIMiB,IJNjBA,QAAQ,EAARA,QALK,uCIqB4B,EAVhB;AFXf,AFMFE,AGbE,ACkBe,IJLjBA,EIewBE,GJfnB,CENC4B,AEWW,CJLjB9B,EENS,GAAG6B,SAAV,EAAqB,QEqBC3B,IAVP;AFVb,AFDC,AGND,GHMN,YECa,ACPA;ADOE0B,AFOhB,AGdgBlB,AC4Bf,MAAIA,IFrBWkB,ACPAlB,EC4BL,ID5BW,CC4BN,CFrBQ,ACPA,EDOEvB,IAAZ,EEqBb,EAA0B;AFrBK0C,ACPlB,AC6BXjC,IAAAA,KD7BI,CDOyBiC,AEsBvB,CAAC2C,QFtB+B,EAAE1C,CEsBxC,GAAqBpB,MAAM,KAAK,KAAX,qBAA8BR,IAA9B,IAAuC,YAA5D;AFtBW,ACfX,ACsCAN,IAAAA,KFvBI,CEuBE,CAACqE,KAAP,CAAaC,OAAb,GAAuB,OAAvB;AFtBG,ACNJ,AC6BCpB,GDxCF,CCwCEA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCyB,WAAhC,GAA8C,aAA9C;AACD,GAJD,MAIO;AFvBH,ACLJ,AC6BEvC,MD7BIQ,ODKK,KEwBCC,CD7BO,GAAG,SAAhBD,CC6BJ,CAAyBV,QAAzB,GD7BoB;ADKTH,ACLS,AC8BrB,QFzBYA,GCLeO,KDKP,ACLY,CAACrC,CDKrB8B,OCLe,CDKjB,CCLW;ADKCC,ACLD,AC+BvB,GD/BC,KDKuBA,SAAS,EAATA;AAAZ,OAAP;AACD,ACJH,AC+BFgB,KFjCiB,CCET7C,CDID,EE2BE,CAACyE,CD/BG,GAAG,SAARzE,GC+BR,CAA2B,CD/BX,MC+BhB,EAAoCmE,IAApC;AF3BSvC,ACJO,ACgChBkB,MF5BSlB,EE4BD,CAACmB,EDhCab,GDIL,EAAE,CAAZ,GCJwB,CAACC,CCgChC,CAAuB,GDhCc,CAACnC,GCgCtC,EDhCgC,ACgCAyE,EDhCD,cCgC/B,CAAiD,MDhCErC,CCgCnD,EAA0DwB,IDhC3B,GAA8BvB,ECgC7D,WDhC+B,CAAf;ADIMR,ACJN,GAAd,GDIoBA,SAAS,EAAE,CAAC;AAA3B,KANU,CAAb;AAQA,ACJF,MAAMzC,KDIGuC,IAAI,CAACC,GCJK,GAAG,EDIpB,OCJIxC,aAAgB;ADKrB,ACLqB,GDtBtB,QCsB4B+C,KAAK,CAAC/C,aAAN,EAAN;AAAA,GAAtB;ADOA,MAAMiB,QAAQ,GAAG,SAAXA,QAAW,CAACI,EAAD,EAAKsB,QAAL,EAAkB;AACjC,ACNF,MAAMW,EDMEvD,IAAI,GAAG8B,KCNK,GDMG,ACNA,CDMCR,EAAD,CAArB,KCNIiC,cAAiB,CAACX,QAAD,EAAc;ADOnCC,ACNAI,IDMAJ,ACNAI,OAAO,CAACC,EDME,CAAC,UCNJ,CAAP,CAAuBhC,QAAvB,CAAgC4B,SAAhC,EAA2CF,QAA3C;ADMW,ACLZ,GAFD,UDOmBA,QAAQ,CAAC5C,IAAD,CAAd;AAAA,KAAD,EAAuB,GAAvB,CAAV;AACD,ACJD,GDCA,MCDO;AACLoD,IAAAA,SAAS,EAATA,SADK;ADMP,ACJElC,IAAAA,KDIK,GCJG,EAARA,QAFK;ADOLH,ACJAS,IDIAT,ACJAS,IDII,EAAJT,GCJS,CDGJ,CCHLS,SAHK;ADQLP,ACJAqC,IDIArC,ACJAqC,KDIK,EAALrC,KAFK,CCFQ,EAAbqC,aAJK;ADSLpC,ACJAiC,IDIAjC,ACJAiC,OAAO,CDIC,CCJRA,CDIAjC,MCTK;ADMA,ACALL,GDAF,CCAEA,KAAK,EAALA,KANK;ADWR,ACJGZ,IAAAA,aAAa,EAAbA,aAPK;AAQLsD,IAAAA,cAAc,EAAdA;AARK,GAAP;AAUD,CApDkB,EAAnB;;eAsDeT","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["export default function Board(cells = new Array(9).fill(null)) {\n  const checkIfWinner = (player) => (\n    (cells[0] === player && cells[1] === player && cells[2] === player)\n    || (cells[3] === player && cells[4] === player && cells[5] === player)\n    || (cells[6] === player && cells[7] === player && cells[8] === player)\n    || (cells[0] === player && cells[3] === player && cells[6] === player)\n    || (cells[1] === player && cells[4] === player && cells[7] === player)\n    || (cells[2] === player && cells[5] === player && cells[8] === player)\n    || (cells[0] === player && cells[4] === player && cells[8] === player)\n    || (cells[2] === player && cells[4] === player && cells[6] === player)\n  );\n\n  const validMove = (move) => (move >= 1) && (move <= 9) && (cells[move - 1] === null);\n\n  const getValidMoves = () => cells\n    .reduce((acc, cell, index) => (cell === null ? [...acc, index + 1] : acc), []);\n\n  const setCell = (pos, value) => {\n    cells[pos - 1] = value;\n  };\n\n  const winner = () => {\n    if (checkIfWinner(0)) {\n      return 0;\n    }\n    if (checkIfWinner(1)) {\n      return 1;\n    }\n    if (!cells.includes(null)) {\n      return -1;\n    }\n    return null;\n  };\n\n  const toString = () => cells.map((cell) => (cell === null ? ' ' : ['X', 'O'][cell]));\n\n  const clone = () => Board([...cells]);\n\n  return {\n    validMove,\n    getValidMoves,\n    setCell,\n    winner,\n    toString,\n    clone,\n  };\n}\n","export default function Player(name, id) {\n  const token = ['X', 'O'][id];\n\n  const playMove = () => {};\n\n  return {\n    name,\n    token,\n    playMove,\n  };\n}\n","export default function AI(name, id, CALC_TIME = 500) {\n  const token = ['X', 'O'][id];\n\n  const playToEnd = (gs) => {\n    let status;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      status = gs.getStatus();\n      if (status.status !== 'playing') {\n        break;\n      }\n      const valid = gs.getValidMoves();\n      const move = valid[Math.floor(Math.random() * valid.length)];\n      gs.playMove(move);\n    }\n    return status;\n  };\n\n  const calcMove = (gs) => {\n    const stats = gs.getValidMoves().map((move) => ({ move, score: 0, total: 0 }));\n    for (let times = 0, eta = Date.now() + CALC_TIME; Date.now() < eta && times < 5e4; times += 1) {\n      const moveIdx = Math.floor(Math.random() * stats.length);\n      const { move } = stats[moveIdx];\n      const newGS = gs.clone();\n      newGS.playMove(move);\n      const { status, player = {} } = playToEnd(newGS);\n      if (status === 'win') {\n        if (player.token === token) {\n          stats[moveIdx].score += 1;\n        } else {\n          stats[moveIdx].score -= 1;\n        }\n      }\n      stats[moveIdx].total += 1;\n    }\n\n    const best = stats.reduce(({ bestMove, bestScore }, { move, score, total }) => {\n      const avg = score / total;\n      if (avg > bestScore) {\n        return { bestMove: move, bestScore: avg };\n      }\n      return { bestMove, bestScore };\n    }, { bestMove: 0, bestScore: -9e99 });\n\n    return best.bestMove;\n  };\n\n  const playMove = (gs, makeMove) => {\n    const move = calcMove(gs);\n    setTimeout(() => makeMove(move), 100);\n  };\n\n  return {\n    name,\n    token,\n    playMove,\n  };\n}\n","import Board from './board';\nimport Player from './player';\nimport AI from './ai';\n\nconst gameState = (function GameState(board = Board(), players = [], currentPlayer = 0) {\n  const newGame = (player = 0) => {\n    board = Board();\n    currentPlayer = player;\n  };\n\n  const setPlayer = (name, id, isAI = false) => {\n    players[id] = isAI ? AI(name, id) : Player(name, id);\n  };\n\n  const playMove = (move) => {\n    if (board.validMove(move)) {\n      board.setCell(move, currentPlayer);\n      currentPlayer = 1 - currentPlayer;\n      return true;\n    }\n    return false;\n  };\n\n  const getStatus = () => {\n    switch (board.winner()) {\n      case 0:\n        return { status: 'win', player: players[0] };\n      case 1:\n        return { status: 'win', player: players[1] };\n      case -1:\n        return { status: 'draw' };\n      default:\n        return { status: 'playing' };\n    }\n  };\n\n  const getBoardState = () => board.toString();\n\n  const clone = () => GameState(board.clone(), [...players], currentPlayer);\n\n  const getValidMoves = () => board.getValidMoves();\n\n  const nextPlayerTurn = (makeMove) => {\n    players[currentPlayer].playMove(gameState, makeMove);\n  };\n\n  return {\n    setPlayer,\n    playMove,\n    getStatus,\n    getBoardState,\n    newGame,\n    clone,\n    getValidMoves,\n    nextPlayerTurn,\n  };\n}());\n\nexport default gameState;\n","import gameState from './game';\n\nconst ROBOHASH_URL = 'https://robohash.org';\n\nwindow.gs = gameState;\n\nconst ticTacToe = document.querySelector('#tic-tac-toe');\nconst winner = document.querySelector('#winner');\n\nfunction renderBoard() {\n  gameState.getBoardState().forEach((cell, index) => {\n    if (cell === ' ') {\n      document.querySelector('#tic-tac-toe').children[index].className = 'cell';\n    } else {\n      document.querySelector('#tic-tac-toe').children[index].classList.add(cell.toLowerCase());\n    }\n  });\n}\n\nfunction avatarImg(name, id) {\n  const img = document.createElement('img');\n  img.src = `${ROBOHASH_URL}/${name}`;\n  img.id = `avatar-${id}`;\n  return img;\n}\n\nfunction makeMove(move) {\n  document.querySelector(`#cell-${move}`).click();\n  renderBoard();\n}\n\nfunction startGame() {\n  gameState.newGame();\n\n  const player1 = document.querySelector('#player-1').value;\n  const player2 = document.querySelector('#player-2').value;\n\n  gameState.setPlayer(player1, 0, document.querySelector('#ai-1').checked);\n  gameState.setPlayer(player2, 1, document.querySelector('#ai-2').checked);\n  document.querySelector('#avatar-1').replaceWith(avatarImg(player1, 1));\n  document.querySelector('#avatar-2').replaceWith(avatarImg(player2, 2));\n\n  ticTacToe.style.display = 'grid';\n  renderBoard();\n  winner.style.display = 'none';\n\n  gameState.nextPlayerTurn(makeMove);\n}\n\nfunction play(event) {\n  if (!event.target.classList.contains('cell') || gameState.getStatus().status !== 'playing') {\n    return;\n  }\n\n  const id = event.target.id.split('-')[1];\n\n  gameState.playMove(id);\n  renderBoard();\n\n  const { status, player: { name } = {} } = gameState.getStatus();\n  if (status !== 'playing') {\n    winner.textContent = status === 'win' ? `Winner: ${name}` : 'No winner!';\n    winner.style.display = 'block';\n    document.querySelector('#play').textContent = 'Play again!';\n  } else {\n    gameState.nextPlayerTurn(makeMove);\n  }\n}\n\nticTacToe.addEventListener('click', play);\ndocument.querySelector('#play').addEventListener('click', startGame);\n"]}