{"version":3,"sources":["js/board.js","js/player.js","js/game.js","js/index.js"],"names":["Board","cells","Array","fill","checkIfWinner","player","validMove","move","setCell","pos","value","winner","includes","toString","map","cell","Player","name","id","token","gameState","GameState","board","players","currentPlayer","newGame","setPlayer","playMove","getStatus","status","getBoardState","ROBOHASH_URL","window","gs","ticTacToe","document","querySelector","renderBoard","forEach","index","children","className","classList","add","toLowerCase","avatarImg","img","createElement","src","startGame","player1","player2","replaceWith","style","display","play","event","target","contains","textContent","addEventListener"],"mappings":"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CZ,GCSpB,EAAyBa,CDTrB,CCSJ,EAA6B;AHC3B,AETC,ACSD,GDZA,GFYMP,AGAAmC,GAAG,GHAG,AGAAX,GHAG,KGAK,CAACY,GHAfpC,MAAS,GAAM,CGAT,CAAuB,KAAvB,CAAZ;AHCE,AGAFmC,EAAAA,GAAG,CAACE,EHAE5C,CGAN,YHAmB,CAAC,AGAP2B,CHAM,CAAjB,EAAsB,QGAxB,cAA6Bd,IAA7B;AHCI,AETJ,ACSA6B,EAAAA,GAAG,CDTGpB,ACSFR,EAAJ,KHAW,CAAP,CETW,GAAG,SAAZQ,CCSaR,EAAnB,MDTkB,CAACD,IAAD,EAAOC,EAAP,EAAc;AFU7B,AETDK,ACSF,IDTEA,KCSKuB,EDTE,CAAC5B,ACSV,EDTS,CAAP,GAAc,qBAAOD,IAAP,EAAaC,EAAb,CAAd;AACD,ACSF,GDXC;AFWE,QAAId,aAAa,CAAC,CAAD,CAAjB,EAAsB;AACpB,AERJ,ACSF,MDTQuB,GCSCsB,IHDI,CAAP,AERU,GAAG,CCSnB,GAAqB,KDTbtB,QAAW,CAACpB,IAAD,EAAU;AFSxB,AERD,ACSFa,QDTME,KAAK,CAAChB,ECSFmB,ODTJ,ACSN,CDTsBlB,IAAhB,CAAJ,EAA2B;AACzBe,MAAAA,KAAK,CAACd,OAAN,CAAcD,IAAd,EAAoBiB,aAApB;AFQF,AEPEA,ACQJ,MDRIA,ACQE0B,EHDA,CAACjD,IGCM,CHDD,CAACW,CGCGuB,GDRC,GAAG,CFOb,CAAe,AGCE,CAACC,CDRDZ,EFOjB,CAAL,EAA2B,OGCb,CDRZ,ACQmC,WAAvB,EAAoCd,KAApD;AHAI,AEPA,ACQJ,MAAMyC,OHDK,AEPA,ACQE,CHDD,CAAR,CGCYhB,CDRZ,OCQoB,CAACC,aAAT,CAAuB,WAAvB,EAAoC1B,KAApD;AHAG,AEPA;ACQHU,gBAAUM,SAAV,CAAoBwB,OAApB,EAA6B,CAA7B;AHAE,AEPA,WFOO,AEPA,IFOP,CEPA;AFQD,AEPA,ACOD9B,GHXA,AEHA,aCcUM,SAAV,CAAoByB,OAApB,EAA6B,CAA7B;;AHEA,AEPA,ACMAhB,EAAAA,IHCMtB,AEPAe,ICME,CAACQ,GHCK,CEPC,EFOE,CEPC,MCMlB,CAAuB,CHCjBvB,CEPAe,OFOW,EEPC,ACMlB,EAAoCwB,CDNZ,UCMxB,CAAgDP,SAAS,CAACK,OAAD,EAAU,CAAV,CAAzD;AHCiB,AENf,ACMFf,EAAAA,QAAQ,CHAelC,AGAdmC,CDNCd,IFMkB,CAACR,AENd,CAACH,EFMO,CAAU,GENvB,ACMV,CAAuB,CDNrB,KFMgCI,IAAD,CGAjC,EAAoCqC,WAApC,CAAgDP,SAAS,CAACM,OAAD,EAAU,CAAV,CAAzD;AHAiC,AEL7B,ACOJjB,EAAAA,SDPS,ACOA,CDPL,ACOMmB,CHFkCtC,IAAI,AGEhD,CAAgBuC,IHFqC,GGErD,CHF4C,EGElB,CHFkC,GAAhB,EGE5C,CHFkE,CAAC,GAAD,EAAM,GAAN,EAAWvC,IAAX,CAAjC;AAAA,AEJ3B,ACONsB,EAAAA,GHHuB,CAAN,OGGN,EDPE;AFII,AEJFR,ACQflB,EAAAA,CHJA,KGIM,CAAC0C,CDRQxB,ICQf,CAAayB,CDRQ,EAAE,ICQvB,CDRa,ECQU,MAAvB;ADR8BjD,ACS/B,UDT+BA,MAAM,EAAEkB,OAAO,CAAC,CAAD;AFM7C,AENa,SFMN,AEND;AFOJjB,AGIJ,IHJIA,KGIKiD,IHJI,AGIb,CAAcC,CHJVlD,IGIJ,EAAqB,GHLZ;AAELE,AEPE,ACWJ,IHJEA,EGIE,CAACgD,IHJI,AEPA,CAAL,ACWM,CHJRhD,AGISiD,MAAN,CHNE,AGMWf,SAAb,CAAuBgB,QAAvB,CAAgC,MAAhC,CAAD,IAA4CtC,cAAUQ,SAAV,GAAsBC,MAAtB,KAAiC,SAAjF,EAA4F;AHH1FlB,AEPI,ACWJ,IHJAA,MAAM,EAANA,GEPW,GFIN;AAILE,AERagB,ACYd,IHJChB,MERagB,EFQL,EAARhB,EERmB,EAAE,KAAV;AFIN,AEJuBR,GFI9B,OEJ8BA,MAAM,EAAEkB,OAAO,CAAC,CAAD;AFU9C,AEVc,ACcbH,SDdM,OCcIO,QAAV,CAAmB6B,KAAK,CAACC,MAAN,CAAavC,EAAhC;;ADbI,ACcJmB,EAAAA,SDdS,CAAC,CAAN,ACcO;ADbL,eAAO;AAAER,ACOI,UDPJA,MAAM,EAAE,WCe0BT,cAAUQ,SAAV,EAR9B;ADPN,ACOM,MAQXC,GDfF,GCOa,wBAQXA,MARW;AAAA,mDAQHxB,MARG;ADNf;AACE,ACKa,eDLN,8CCa6B,EARvB;ADLJwB,ACKI,MAQOZ,IDbXY,ACKI,MDLE,EAAE,iBCaGZ,IARP;ADLN,ACKM,MAQaE,GDb1B,ECKa,yBAQaA,KARb;ADbjB;AAUD,ACaD,GDxBA,GCwBIU,MAAM,KAAK,KAAf,EAAsB;AACpBlB,IAAAA,MAAM,CAACgD,WAAP,qBAAgC1C,IAAhC;ADZF,ACaEN,IAAAA,EDbImB,ICaE,CAACY,QDbU,CCajB,CAAiBC,CDbG,ECapB,CAAqBxB,KAAK,CDbtBW,ACauBc,WAAN,EDbD,ACapB;ADboB,ACcpBjC,IAAAA,MAAM,CDdoBW,ACcnB+B,KDdwB,ACc/B,CDdgCxC,ACcnByC,OAAb,CDd0B,EAAN,ACcG,OAAvB;ADdoB,ACepBnB,GDfF,CCeEA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCuB,WAAhC,GAA8C,aAA9C;AACD;ADdD,ACeD,SDfQ;AACLjC,IAAAA,SAAS,EAATA,SADK;AAELC,ACeJO,IDfIP,KCeK,CAACiC,EDfE,EAARjC,QAFK,ICiBT,CAA2B,OAA3B,EAAoC4B,IAApC;ADdI3B,ACeJO,IDfIP,ICeI,CAACQ,IDfI,EAATR,OCeJ,CAAuB,CDlBd,MCkBT,EAAgCgC,gBAAhC,CAAiD,OAAjD,EAA0DX,SAA1D;ADdInB,IAAAA,aAAa,EAAbA,aAJK;AAKLL,IAAAA,OAAO,EAAPA;AALK,GAAP;AAOD,CA7CkB,EAAnB;;eA+CeL","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["export default function Board() {\n  const cells = new Array(9).fill(null);\n\n  const checkIfWinner = (player) => (\n    (cells[0] === player && cells[1] === player && cells[2] === player)\n    || (cells[3] === player && cells[4] === player && cells[5] === player)\n    || (cells[6] === player && cells[7] === player && cells[8] === player)\n    || (cells[0] === player && cells[3] === player && cells[6] === player)\n    || (cells[1] === player && cells[4] === player && cells[7] === player)\n    || (cells[2] === player && cells[5] === player && cells[8] === player)\n    || (cells[0] === player && cells[4] === player && cells[8] === player)\n    || (cells[2] === player && cells[4] === player && cells[6] === player)\n  );\n\n  const validMove = (move) => (move >= 1) && (move <= 9) && (cells[move - 1] === null);\n\n  const setCell = (pos, value) => {\n    cells[pos - 1] = value;\n  };\n\n  const winner = () => {\n    if (checkIfWinner(0)) {\n      return 0;\n    }\n    if (checkIfWinner(1)) {\n      return 1;\n    }\n    if (!cells.includes(null)) {\n      return -1;\n    }\n    return null;\n  };\n\n  const toString = () => cells.map((cell) => (cell === null ? ' ' : ['X', 'O'][cell]));\n\n  return {\n    validMove,\n    setCell,\n    winner,\n    toString,\n  };\n}\n","export default function Player(name, id) {\n  const token = ['X', 'O'][id];\n\n  return {\n    name,\n    token,\n  };\n}\n","import Board from './board';\nimport Player from './player';\n\nconst gameState = (function GameState() {\n  let board = Board();\n  const players = [];\n  let currentPlayer = 0;\n\n  const newGame = (player = 0) => {\n    board = Board();\n    currentPlayer = player;\n  };\n\n  const setPlayer = (name, id) => {\n    players[id] = Player(name, id);\n  };\n\n  const playMove = (move) => {\n    if (board.validMove(move)) {\n      board.setCell(move, currentPlayer);\n      currentPlayer = 1 - currentPlayer;\n      return true;\n    }\n    return false;\n  };\n\n  const getStatus = () => {\n    switch (board.winner()) {\n      case 0:\n        return { status: 'win', player: players[0] };\n      case 1:\n        return { status: 'win', player: players[1] };\n      case -1:\n        return { status: 'draw' };\n      default:\n        return { status: 'playing' };\n    }\n  };\n\n  const getBoardState = () => board.toString();\n\n  return {\n    setPlayer,\n    playMove,\n    getStatus,\n    getBoardState,\n    newGame,\n  };\n}());\n\nexport default gameState;\n","import gameState from './game';\n\nconst ROBOHASH_URL = 'https://robohash.org';\n\nwindow.gs = gameState;\n\nconst ticTacToe = document.querySelector('#tic-tac-toe');\nconst winner = document.querySelector('#winner');\n\nfunction renderBoard() {\n  gameState.getBoardState().forEach((cell, index) => {\n    if (cell === ' ') {\n      document.querySelector('#tic-tac-toe').children[index].className = 'cell';\n    } else {\n      document.querySelector('#tic-tac-toe').children[index].classList.add(cell.toLowerCase());\n    }\n  });\n}\n\nfunction avatarImg(name, id) {\n  const img = document.createElement('img');\n  img.src = `${ROBOHASH_URL}/${name}`;\n  img.id = `avatar-${id}`;\n  return img;\n}\n\nfunction startGame() {\n  gameState.newGame();\n  const player1 = document.querySelector('#player-1').value;\n  const player2 = document.querySelector('#player-2').value;\n  gameState.setPlayer(player1, 0);\n  gameState.setPlayer(player2, 1);\n  document.querySelector('#avatar-1').replaceWith(avatarImg(player1, 1));\n  document.querySelector('#avatar-2').replaceWith(avatarImg(player2, 2));\n\n  ticTacToe.style.display = 'grid';\n  renderBoard();\n  winner.style.display = 'none';\n}\n\nfunction play(event) {\n  if (!event.target.classList.contains('cell') || gameState.getStatus().status !== 'playing') {\n    return;\n  }\n\n  gameState.playMove(event.target.id);\n  renderBoard();\n\n  const { status, player: { name, token } = {} } = gameState.getStatus();\n\n  if (status === 'win') {\n    winner.textContent = `Winner: ${name}`;\n    winner.classList.add(token.toLowerCase());\n    winner.style.display = 'block';\n    document.querySelector('#play').textContent = 'Play again!';\n  }\n}\n\nticTacToe.addEventListener('click', play);\ndocument.querySelector('#play').addEventListener('click', startGame);\n"]}